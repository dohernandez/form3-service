#%RAML 1.0
title: Form3 Service
description: The form3-service is a service responsible to manage payment resources.
version: v1
protocols:
  - HTTP
  - HTTPS
baseUri: /
mediaType:
  - application/json

types:
  ErrResponse:
    type: object
    properties:
      code:
        type: integer
        format: int64
      error:
        type: string
      status:
        type: string
  VersionResponse:
    type: object
    properties:
      version:
        type: string
      revision:
        type: string
      branch:
        type: string
      build_user:
        type: string
      build_date:
        type: string
      go_version:
        type: string

  Payment:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
      version:
        type: integer
      organisation_id:
        type: string
      attributes:
        type: Payment۰v0

  Payment۰v0:
    type: object
    properties:
      amount:
        type: number
        format: float
      beneficiary_party:
        type: BankAccount
      charges_information:
        type: object
        properties:
          bearer_code:
            type: string
          sender_charges:
            type: array
            items:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                currency:
                  type: string
          receiver_charges_amount:
            type: number
            format: float
          receiver_charges_currency:
            type: string
      currency:
        type: string
      debtor_party:
        type: BankAccount
      end_to_end_reference:
        type: string
      fx:
        type: object
        properties:
          contract_reference:
            type: string
          exchange_rate:
            type: number
            format: float
          original_amount:
            type: number
            format: float
          original_currency:
            type: string
      numeric_reference:
        type: number
        format: float
      payment_id:
        type: number
        format: float
      payment_purpose:
        type: string
      payment_scheme:
        type: string
      payment_type:
        type: string
      processing_date:
        type: datetime
        format: `2006-01-02`
      reference:
        type: string
      scheme_payment_sub_type:
        type: string
      scheme_payment_type:
        type: string
      sponsor_party:
        type: object
        properties:
          account_number:
            type: string
          bank_id:
            type: integer
            format: int16
          bank_id_code:
            type: string

  BankAccount:
    type: object
    properties:
      account_name:
        type: string
      account_number:
        type: string
      account_number_code:
        type: string
      account_type?:
        type: integer
      address:
        type: string
      bank_id:
        type: integer
        format: int16
      bank_id_code:
        type: string
      name:
        type: string

  ErrorResponse:
    type: object
    properties:
      status:
        type: string
      error:
        type: string

/version:
  get:
      description: Display API server version.
      responses:
        '200':
          description: OK
          body:
            application/json:
              type: VersionResponse
              example:
                version: v1.0
                revision: 52da34e2afa432cebca21adb755a827cb990c1ce
                branch: master
                build_user: dohernandez
                build_date: 2019-02-25T17:33:16UTC
                go_version: go1.11.4

/v1:
  /transaction:
    /payments:
      post:
        description: Create new payment.
        body:
          application/json:
            type: object
            properties:
              organisation_id:
                type: string
              attributies:
                type: Payment۰v0
            example: |
              {
                "organisation_id": "743d5b63-8e6f-432e-a8fa-c5d8d2ee5fcb",
                "attributes": {
                  "amount": "100.21",
                  "beneficiary_party": {
                    "account_name": "W Owens",
                    "account_number": "31926819",
                    "account_number_code": "BBAN",
                    "account_type": 0,
                    "address": "1 The Beneficiary Localtown SE2",
                    "bank_id": "403000",
                    "bank_id_code": "GBDSC",
                    "name": "Wilfred Jeremiah Owens"
                  },
                  "charges_information": {
                    "bearer_code": "SHAR",
                    "sender_charges": [
                      {
                        "amount": "5.00",
                        "currency": "GBP"
                      },
                      {
                        "amount": "10.00",
                        "currency": "USD"
                      }
                    ],
                    "receiver_charges_amount": "1.00",
                    "receiver_charges_currency": "USD"
                  },
                  "currency": "GBP",
                  "debtor_party": {
                    "account_name": "EJ Brown Black",
                    "account_number": "GB29XABC10161234567801",
                    "account_number_code": "IBAN",
                    "address": "10 Debtor Crescent Sourcetown NE1",
                    "bank_id": "203301",
                    "bank_id_code": "GBDSC",
                    "name": "Emelia Jane Brown"
                  },
                  "end_to_end_reference": "Wil piano Jan",
                  "fx": {
                    "contract_reference": "FX123",
                    "exchange_rate": "2.00000",
                    "original_amount": "200.42",
                    "original_currency": "USD"
                  },
                  "numeric_reference": "1002001",
                  "payment_id": "123456789012345678",
                  "payment_purpose": "Paying for goods/services",
                  "payment_scheme": "FPS",
                  "payment_type": "Credit",
                  "processing_date": "2017-01-18",
                  "reference": "Payment for Em's piano lessons",
                  "scheme_payment_sub_type": "InternetBanking",
                  "scheme_payment_type": "ImmediatePayment",
                  "sponsor_party": {
                    "account_number": "56781234",
                    "bank_id": "123123",
                    "bank_id_code": "GBDSC"
                  }
                }
              }
        responses:
          '201':
            description: OK
            body:
              application/json:
                type: Payment
                example: |
                  {
                    "type": "Payment",
                    "id": "dbb89036-4007-47ff-8fab-00bdd5cc4021",
                    "version": 0,
                    "organisation_id": "743d5b63-8e6f-432e-a8fa-c5d8d2ee5fcb",
                    "attributes": {
                      "amount": "100.21",
                      "beneficiary_party": {
                        "account_name": "W Owens",
                        "account_number": "31926819",
                        "account_number_code": "BBAN",
                        "account_type": 0,
                        "address": "1 The Beneficiary Localtown SE2",
                        "bank_id": "403000",
                        "bank_id_code": "GBDSC",
                        "name": "Wilfred Jeremiah Owens"
                      },
                      "charges_information": {
                        "bearer_code": "SHAR",
                        "sender_charges": [
                          {
                            "amount": "5.00",
                            "currency": "GBP"
                          },
                          {
                            "amount": "10.00",
                            "currency": "USD"
                          }
                        ],
                        "receiver_charges_amount": "1.00",
                        "receiver_charges_currency": "USD"
                      },
                      "currency": "GBP",
                      "debtor_party": {
                        "account_name": "EJ Brown Black",
                        "account_number": "GB29XABC10161234567801",
                        "account_number_code": "IBAN",
                        "address": "10 Debtor Crescent Sourcetown NE1",
                        "bank_id": "203301",
                        "bank_id_code": "GBDSC",
                        "name": "Emelia Jane Brown"
                      },
                      "end_to_end_reference": "Wil piano Jan",
                      "fx": {
                        "contract_reference": "FX123",
                        "exchange_rate": "2.00000",
                        "original_amount": "200.42",
                        "original_currency": "USD"
                      },
                      "numeric_reference": "1002001",
                      "payment_id": "123456789012345678",
                      "payment_purpose": "Paying for goods/services",
                      "payment_scheme": "FPS",
                      "payment_type": "Credit",
                      "processing_date": "2017-01-18",
                      "reference": "Payment for Em's piano lessons",
                      "scheme_payment_sub_type": "InternetBanking",
                      "scheme_payment_type": "ImmediatePayment",
                      "sponsor_party": {
                        "account_number": "56781234",
                        "bank_id": "123123",
                        "bank_id_code": "GBDSC"
                      }
                    }
                  }

          '400':
            description: Bad Request
            body:
              application/json:
                type: ErrorResponse
                example: |
                  {
                    "status": "Bad Request",
                    "error": "Decoding post json body: invalid character ']' looking for beginning of value"
                  }

          '412':
            description: Precondition Failed
            body:
              application/json:
                type: ErrorResponse
                example: |
                  {
                    "status": "Precondition Failed",
                    "error": "attributes: (charges_information: (sender_charges: (1: (currency: cannot be blank.).).).)."
                  }

          '500':
            description: Internal Server Error
            body:
              application/json:
                type: ErrorResponse
                example: |
                  {
                    "status": "Internal Server Error",
                    "error": "goengine: unsupported empty event stream"
                  }
      '/{id}':
        uriParameters:
          id:
            description: The payment id. Format must be uuid.
        /beneficiary:
          patch:
            description: Update beneficiary the given payment
            body:
              application/json:
                type: BankAccount
                example: |
                    {
                      "account_name": "W Connor",
                      "account_number": "31926812",
                      "account_number_code": "BBAN",
                      "account_type": 0,
                      "address": "1 The Beneficiary Localtown SE2",
                      "bank_id": "403000",
                      "bank_id_code": "GBDSC",
                      "name": "Wilfred Jeremiah Connor"
                    }
            responses:
              '204':
                description: OK

              '400':
                description: Bad Request
                body:
                  application/json:
                    type: ErrorResponse
                    example: |
                      {
                        "status": "Bad Request",
                        "error": "Decoding post json body: invalid character ']' looking for beginning of value"
                      }

              '412':
                description: Precondition Failed
                body:
                  application/json:
                    type: ErrorResponse
                    example: |
                      {
                        "status": "Precondition Failed",
                        "error": "account_name: cannot be blank."
                      }

              '404':
                description: Not Found
                body:
                  application/json:
                    type: ErrorResponse
                    example: |
                      {
                        "status": "Not Found",
                        "error": "not found: goengine: unsupported empty event stream"
                      }

              '500':
                description: Internal Server Error
                body:
                  application/json:
                    type: ErrorResponse
                    example: |
                      {
                        "status": "Internal Server Error",
                        "error": "goengine: unsupported empty event stream"
                      }

        delete:
          description: Delete the given payment
          responses:
            '204':
              description: OK

            '412':
              description: Precondition Failed
              body:
                application/json:
                  type: ErrorResponse
                  example: |
                    {
                      "status": "Precondition Failed",
                      "error": "account_name: cannot be blank."
                    }

            '404':
              description: Not Found
              body:
                application/json:
                  type: ErrorResponse
                  example: |
                    {
                      "status": "Not Found",
                      "error": "not found: goengine: unsupported empty event stream"
                    }

            '500':
              description: Internal Server Error
              body:
                application/json:
                  type: ErrorResponse
                  example: |
                    {
                      "status": "Internal Server Error",
                      "error": "goengine: unsupported empty event stream"
                    }
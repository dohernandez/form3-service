language: go

sudo: false

go:
  - 1.11.x

stages:
  - "Code Style"
  - "Integration Test"
  - "Unit Tests"
  - "Docker Image"

jobs:
  include:
    - stage: "Code Style"
      script: ci/scripts/code-style.sh

    - stage: "Unit Tests"
      install:
        - go get github.com/mattn/goveralls
        - make deps
      script: make test-unit
      after_script:
        - cat overalls.coverprofile
        # Upload coverage results
        # Example https://docs.coveralls.io/go
        - $HOME/gopath/bin/goveralls -coverprofile=overalls.coverprofile -service=travis-ci -repotoken $CODECOV_TOKEN

    - stage: "Integration Test"
      before_install:
        # Docker Compose Install
        - curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
        # Download and install Docker libs
        - curl -L https://github.com/Ortus-Solutions/docker-buildfiles/archive/master.zip > docker.zip
        - unzip docker.zip -d workbench
        - mv workbench/docker-buildfiles-master workbench/docker
        # CommandBox Keys
        - sudo apt-key adv --keyserver keys.gnupg.net --recv 6DA70622
        - sudo echo "deb http://downloads.ortussolutions.com/debs/noarch /" | sudo tee -a
            /etc/apt/sources.list.d/commandbox.list
      install:
        # Core testing install
        - sudo apt-get update && sudo apt-get --assume-yes install commandbox
        - box install
        - box server start
        - go get github.com/mattn/goveralls
        - make deps
      before_script:
        - docker-compose -f ci/assets/docker-compose.yml up -d
        - make migrate
      script: make test-integration
      after_script:
        - docker-compose -f ci/assets/docker-compose.yml down
        - cat features/bootstrap/profile.coverprofile
        # Upload coverage results
        # Example https://docs.coveralls.io/go
        - $HOME/gopath/bin/goveralls -coverprofile=features/bootstrap/profile.coverprofile -service=travis-ci -repotoken $CODECOV_TOKEN
      env:
        - COMPOSE_VERSION=1.23.2
        # service environment variables Example .env.template
        - SERVICE_NAME=form3-service
        - ENVIRONMENT=test
        - LOG_LEVEL=DEBUG
        - WEB_PORT=8000
        - DATABASE_DSN=postgres://user:password@localhost:5434/form3-service?sslmode=disable

    - stage: "Docker Image"
      script:
        - export REPO=quay.io/dohernandez/form3-service
        - export TAG=`if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then echo "PR-${TRAVIS_PULL_REQUEST}"; else "latest"; fi`
        # Log in quay.io to pull the images
        - docker login -u="$QUAY_USERNAME" -p="$QUAY_PASSWORD" quay.io
        - docker build -t $REPO:$COMMIT . --cache-from $REPO:latest
        - docker tag $REPO:$COMMIT $REPO:$TAG
        - docker push $REPO:$TAG
      if: branch = master || type = pull_request
      env:
        - COMMIT=${TRAVIS_COMMIT::8}
